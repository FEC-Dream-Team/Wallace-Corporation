(self.webpackChunkwallace_corporation=self.webpackChunkwallace_corporation||[]).push([[796],{7615:(n,e,t)=>{"use strict";t.d(e,{Z:()=>i});var r=t(7294),a=t(5430);function o(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const i=function(n){var e,t,i=n.photo,l=(e=(0,r.useState)(!1),t=2,function(n){if(Array.isArray(n))return n}(e)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){a=!0,o=n}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return t}}(e,t)||function(n,e){if(n){if("string"==typeof n)return o(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?o(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=l[0],u=l[1];return i?r.createElement("span",{className:s?a.Z.overlayPhoto:""},s?r.createElement("img",{role:"presentation",src:i.url?i.url:i,alt:"review",className:a.Z.photo,onClick:function(){return u(!s)},onKeyDown:function(){return u(!s)}}):r.createElement("img",{role:"presentation",src:i.url?i.url:i,alt:"review",className:a.Z.imgThumbnail,onClick:function(){return u(!s)},onKeyDown:function(){return u(!s)}})):null}},2529:(n,e,t)=>{"use strict";t.d(e,{Z:()=>A});var r=t(7294),a=t(5430),o=t(9669),i=t.n(o),l=t(7248);const s={body:'<path class="clr-i-solid clr-i-solid-path-1" d="M5.92 2a1 1 0 0 0-1 1v30a1 1 0 0 0 2 0V3a1 1 0 0 0-1-1z" fill="currentColor"/><path class="clr-i-solid clr-i-solid-path-2" d="M30.5 3.82a1 1 0 0 0-1 0a14.9 14.9 0 0 1-6.13 1.16a13.11 13.11 0 0 1-5.18-1.49A12.78 12.78 0 0 0 13.2 2a10.86 10.86 0 0 0-4.2.85V20a8.8 8.8 0 0 1 4.25-1.08a11.22 11.22 0 0 1 4.2 1.28a14.84 14.84 0 0 0 6 1.66a16.79 16.79 0 0 0 7-1.37a1 1 0 0 0 .55-.89V4.67a1 1 0 0 0-.5-.85z" fill="currentColor"/>',width:36,height:36};function u(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){a=!0,o=n}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return t}}(n,e)||function(n,e){if(n){if("string"==typeof n)return c(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?c(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const A=function(n){var e=n.helpfulness,t=u((0,r.useState)(e),2),o=t[0],c=t[1],A=u((0,r.useState)("Report"),2),d=A[0],m=A[1],f=u((0,r.useState)(!1),2),p=f[0],h=f[1];return r.createElement("div",{className:a.Z.helpful},r.createElement("div",{"data-testid":"helpfulText",className:a.Z.helpful},"Was this helpful?"),r.createElement("button",{"data-testid":"helpful-button",type:"submit",onClick:function(t){if(c(e+1),n.review_id){var r=n.review_id;i().put("/reviews/".concat(r,"/helpful")).then((function(n){return console.log(n.status)})).catch((function(n){return console.log(n)}))}else if(n.question_id){var a=n.question_id;i().put("/qa/questions/".concat(a,"/helpful")).then((function(n){return console.log(n.status)})).catch((function(n){return console.log(n)}))}else if(n.answer_id){var o=n.answer_id;i().put("/qa/answers/".concat(o,"/helpful")).then((function(n){return console.log(n.status)})).catch((function(n){return console.log(n)}))}},className:a.Z.helpfulButton,value:"yes"},"Yes"),r.createElement("div",{"data-testid":"helpful-count",className:"".concat(a.Z.helpful," ").concat(a.Z.helpfulCount)},"(",o,")"," "),r.createElement("button",{"data-testid":"report-button",className:p?a.Z.reportedTrue:a.Z.reported,onClick:function(){m("Reported"),h(!0),n.answer_id?i().put("/qa/answers/".concat(n.answer_id,"/report")).then((function(){return console.log(status.status)})).catch(console.log):n.review_id?i().put("/reviews/".concat(n.review_id,"/report")).then((function(){return console.log(status.status)})).catch(console.log):i().put("/qa/questions/".concat(n.question_id,"/report")).then((function(){return console.log(status.status)})).catch(console.log)},type:"submit"},d),p?r.createElement(l.JO,{className:a.Z.flag,icon:s}):null)}},3796:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>N});var r=t(7294),a=t(3379),o=t.n(a),i=t(828);o()(i.Z,{insert:"head",singleton:!1});const l=i.Z.locals||{};var s=t(7248);const u={body:'<path d="M17.545 15.467l-3.779-3.779a6.15 6.15 0 0 0 .898-3.21c0-3.417-2.961-6.377-6.378-6.377A6.185 6.185 0 0 0 2.1 8.287c0 3.416 2.961 6.377 6.377 6.377a6.15 6.15 0 0 0 3.115-.844l3.799 3.801a.953.953 0 0 0 1.346 0l.943-.943c.371-.371.236-.84-.135-1.211zM4.004 8.287a4.282 4.282 0 0 1 4.282-4.283c2.366 0 4.474 2.107 4.474 4.474a4.284 4.284 0 0 1-4.283 4.283c-2.366-.001-4.473-2.109-4.473-4.474z" fill="currentColor"/>',width:20,height:20},c=function(n){var e=n.searchQuestions;return r.createElement(r.Fragment,null,r.createElement("div",{className:l.searchBarSection},r.createElement(s.JO,{className:l.magnifyingGlass,icon:u}),r.createElement("input",{"data-testid":"search-input",type:"search",onChange:function(n){return e(n.target.value)},className:l.searchBar,placeholder:"Search Questions..."})))};var A=t(2529),d=t(7615);const m=function(n){var e,t,a,o=n.answer,i=o.body,s=o.answerer_name,u=o.date,c=o.id,m=o.helpfulness,f=o.photos;return r.createElement("div",{className:l.answer},r.createElement("span",{className:l.answerBody},i),r.createElement("div",{className:l.answerPhotos},f.map((function(n,e){return r.createElement(d.Z,{key:e,photo:n})}))),r.createElement("div",null,r.createElement("p",{className:l.userAndDate},"by ",s,", ",(a=(t=(e=u).slice(0,e.indexOf("T")).split("-")).shift(),t.push(a),t.join("-"))),r.createElement(A.Z,{className:l.answerHelpful,answer_id:c,helpfulness:m})))};var f=t(9669),p=t.n(f),h=t(5430);function g(n){return function(n){if(Array.isArray(n))return B(n)}(n)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(n)||b(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function E(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){a=!0,o=n}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return t}}(n,e)||b(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(n,e){if(n){if("string"==typeof n)return B(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?B(n,e):void 0}}function B(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const y=function(n){var e=n.open,t=n.onClose,a=n.question_id,o=n.getQuestions,i=(n.productId,E((0,r.useState)(""),2)),s=i[0],u=i[1],c=E((0,r.useState)(""),2),A=c[0],m=c[1],f=E((0,r.useState)(""),2),B=f[0],y=f[1],v=E((0,r.useState)([]),2),C=v[0],w=v[1],S=E((0,r.useState)([]),2),q=S[0],_=S[1],k=E((0,r.useState)(""),2),x=k[0],N=k[1],I=RegExp(/^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i),j=function(n){u(""),m(""),y(""),w([]),_([])};return r.createElement(r.Fragment,null,r.createElement("div",{onClick:function(){t(),j()},className:e?h.Z.overlay:""}),r.createElement("div",{style:{transform:e?"translate(-50%, -50%)":"translate(-50%, -150vh)"},className:h.Z.modal},r.createElement("div",{className:h.Z.modalHeader},r.createElement("h3",null,"Add an Answer"),r.createElement("p",{className:h.Z.closeModal,onClick:function(){t(),j()}},"x")),r.createElement("div",{className:h.Z.modalBody},r.createElement("form",{encType:"multipart/form-data",onSubmit:function(n){return function(n){n.preventDefault();var e={body:s,name:A,email:B,photos:[]};if(I.test(B)){var t,r=[],i=function(n,e){var t;if("undefined"==typeof Symbol||null==n[Symbol.iterator]){if(Array.isArray(n)||(t=b(n))){t&&(n=t);var r=0,a=function(){};return{s:a,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,l=!1;return{s:function(){t=n[Symbol.iterator]()},n:function(){var n=t.next();return i=n.done,n},e:function(n){l=!0,o=n},f:function(){try{i||null==t.return||t.return()}finally{if(l)throw o}}}}(q);try{var l=function(){var n,e=t.value,a={name:e.name,data:""},o=(n=e,new Promise((function(e,t){console.log(n);var r=new FileReader;r.readAsDataURL(n),r.onload=function(){return e(r.result)},r.onerror=function(n){return t(n)}}))).then((function(n){return a.data=n.split(",")[1]})).then((function(){return p().post("/upload_images",a)})).then((function(n){return n.data})).catch(console.log);r.push(o)};for(i.s();!(t=i.n()).done;)l()}catch(n){i.e(n)}finally{i.f()}Promise.all(r).then((function(n){return e.photos=n})).then((function(){return p().post("/qa/questions/".concat(a,"/answers"),e)})).then((function(){return o(20111)})).then((function(){return j()})).catch(console.log)}else N("*You must enter a valid email")}(n)},action:""},r.createElement("p",null,"Your Answer *"),r.createElement("textarea",{"data-testid":"answer-input",value:s,required:"required",onChange:function(n){return u(n.target.value)},className:h.Z.qInput,maxLength:"1000"}),r.createElement("p",null,"What is your nickname? *"),r.createElement("input",{"data-testid":"answer-username-input",value:A,required:"required",onChange:function(n){return m(n.target.value)},className:l.modalInput,type:"text",placeholder:"Example: jack543!"}),r.createElement("p",{className:h.Z.finePrint},A.length>0?"For privacy reasons, do not use your full name or email address":""),r.createElement("p",null,"Your Email *"),r.createElement("input",{"data-testid":"answer-email-input",value:B,required:"required",onChange:function(n){return y(n.target.value)},className:l.modalInput,type:"text",placeholder:"Example: jack@email.com"}),r.createElement("p",{className:h.Z.finePrint},B.length>0?"For authentication reasons, you will not be emailed":""),r.createElement("div",null,q.length<5?r.createElement("input",{"data-testid":"answer-photo-upload",value:"",onChange:function(n){console.log(n.target.files[0]),q.length<5&&(_([].concat(g(q),[n.target.files[0]])),w([].concat(g(C),[URL.createObjectURL(n.target.files[0])])))},type:"file"}):null,C.map((function(n,e){return r.createElement(d.Z,{key:e,photo:n})}))),r.createElement("button",{"data-testid":"answer-modal-submit-button",type:"submit",className:h.Z.modalButton},"Submit Answer"),r.createElement("p",{className:h.Z.finePrint},x)))))};function v(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){a=!0,o=n}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return t}}(n,e)||function(n,e){if(n){if("string"==typeof n)return C(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?C(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function C(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const w=function(n){var e=n.question,t=n.getQuestions,a=n.productId,o=e.question_body,i=e.answers,s=e.question_id,u=e.question_helpfulness,c=v((0,r.useState)([]),2),d=c[0],f=c[1],p=v((0,r.useState)([]),2),h=p[0],g=p[1],E=v((0,r.useState)(!1),2),b=E[0],B=E[1],C=v((0,r.useState)(!1),2),w=C[0],S=C[1],q=v((0,r.useState)("See More Answers"),2),_=q[0],k=q[1];return(0,r.useEffect)((function(){var n=function(n){var e,t=n.length;do{e=!1;for(var r=0;r<t-1;r++)if(n[r].helpfulness<n[r+1].helpfulness){var a=n[r];n[r]=n[r+1],n[r+1]=a,e=!0}}while(e);return function(n){var e=n.filter((function(n){return"Seller"===n.answerer_name})),t=n.filter((function(n){return"Seller"!==n.answerer_name}));return e.concat(t)}(n)}(Object.values(i));f(n)}),[e]),(0,r.useEffect)((function(){g(d.slice(0,2))}),[d]),(0,r.useEffect)((function(){w?(g(d),k("Collapse Answers")):(g(d.slice(0,2)),k("See More Answers"))}),[w]),r.createElement("div",{className:l.questionAndAnswer},r.createElement("div",{className:l.questionGrid},r.createElement("h4",{className:l.q},"Q:"),r.createElement("div",{className:l.question},r.createElement("p",{className:l.questionBody},o)),r.createElement("div",{className:l.questionHelpful},r.createElement(A.Z,{question_id:s,helpfulness:u}),r.createElement("button",{"data-testid":"add-answer-button",className:l.addAnswerButton,onClick:function(){return B(!0)},type:"button"},"Add Answer")),r.createElement(y,{productId:a,getQuestions:t,question_id:s,onClose:function(){return B(!1)},open:b})),r.createElement("div",{className:l.answerGrid},r.createElement("h4",{className:l.a},"A:"),r.createElement("div",{className:l.answerList},h.map((function(n,e){return r.createElement(m,{key:e,answer:n})}))),d.length>2?r.createElement("button",{"data-testid":"show-more-answers-button",className:l.showMoreAnswersButton,onClick:function(){S(!w)}},_):null))};function S(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){a=!0,o=n}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return t}}(n,e)||function(n,e){if(n){if("string"==typeof n)return q(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?q(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function q(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}t(3935);const _=function(n){var e=n.open,t=n.onClose,a=n.getQuestions,o=n.productId,i=S((0,r.useState)(""),2),s=i[0],u=i[1],c=S((0,r.useState)(""),2),A=c[0],d=c[1],m=S((0,r.useState)(""),2),f=m[0],g=m[1],E=S((0,r.useState)(""),2),b=E[0],B=E[1],y=RegExp(/^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i),v=function(){u(""),d(""),g("")};return r.createElement(r.Fragment,null,r.createElement("div",{onClick:function(){t(),v()},"data-testid":"question-overlay",className:e?h.Z.overlay:""}),r.createElement("div",{style:{transform:e?"translate(-50%, -50%)":"translate(-50%, -150vh)"},className:h.Z.modal},r.createElement("div",{className:h.Z.modalHeader},r.createElement("h3",null,"Ask Your Question about the Product"),r.createElement("p",{className:h.Z.closeModal,onClick:function(){t(),v()}},"x")),r.createElement("div",{className:h.Z.modalBody},r.createElement("form",{id:"questionForm",onSubmit:function(n){return function(n){n.preventDefault();var e={body:s,name:A,email:f,product_id:o};y.test(f)?p().post("/qa/questions",e).then((function(){return a(20111)})).then((function(){return v()})).catch(console.log):B("*You must enter a valid email")}(n)},action:""},r.createElement("p",null,"Question *"),r.createElement("textarea",{"data-testid":"question-input",value:s,required:"required",onChange:function(n){return u(n.target.value)},maxLength:"1000",className:h.Z.qInput,type:"text"}),r.createElement("p",null,"What is your nickname? *"),r.createElement("input",{"data-testid":"question-username-input",value:A,required:"required",onChange:function(n){return d(n.target.value)},className:l.modalInput,maxLength:"60",placeholder:"example: jackson11!",type:"text"}),r.createElement("p",{className:h.Z.finePrint},A.length>0?"For privacy reasons, do not use your full name or email address":""),r.createElement("p",null,"Your Email *"),r.createElement("input",{"data-testid":"question-email-input",value:f,required:"required",placeholder:"example: jackson11!@gmail.com",onChange:function(n){return g(n.target.value)},className:l.modalInput,maxLength:"60",type:"text"}),r.createElement("p",{className:h.Z.finePrint},f.length>0?"For authentication reasons, you will not be emailed":""),r.createElement("div",null),r.createElement("button",{"data-testid":"question-modal-submit-button",type:"submit",className:h.Z.modalButton},"Submit Question"),r.createElement("p",{className:h.Z.finePrint},b)))))};function k(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){a=!0,o=n}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return t}}(n,e)||function(n,e){if(n){if("string"==typeof n)return x(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?x(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}const N=function(n){var e=k((0,r.useState)(!1),2),t=e[0],a=e[1],o=n.productId,i=k((0,r.useState)([]),2),s=i[0],u=i[1],A=k((0,r.useState)([]),2),d=A[0],m=A[1],f=k((0,r.useState)(!1),2),h=f[0],g=f[1],E=k((0,r.useState)(!1),2),b=E[0],B=E[1],y=k((0,r.useState)("More Answered Questions"),2),v=y[0],C=y[1],S=function(n){p().get("/qa/questions/".concat(n)).then((function(n){var e=function(n){var e,t=n.length;do{e=!1;for(var r=0;r<t-1;r++)if(n[r].question_helpfulness<n[r+1].question_helpfulness){var a=n[r];n[r]=n[r+1],n[r+1]=a,e=!0}}while(e);return n}(n.data);u(e),m(e.slice(0,4))})).catch(console.log)};return(0,r.useEffect)((function(){S(20111)}),[]),(0,r.useEffect)((function(){h?(m(s),C("Show Less Questions")):(m(s.slice(0,4)),C("More Answered Questions"))}),[h]),r.createElement("div",{className:l.border},r.createElement("div",{className:l.headerBox},r.createElement("h2",{"data-testid":"qa-heading",className:l.qaheader},"Questions & Answers")),r.createElement("div",{className:l.search},r.createElement(c,{searchQuestions:function(n){if(n.length>=3){B(!0);var e=s.filter((function(e){return e.question_body.toLowerCase().includes(n.toLowerCase())}));m(e)}else h?(B(!1),m(s)):(B(!1),m(s.slice(0,2)))}}),0===s.length?r.createElement("button",{"data-testid":"add-a-question-button",className:l.footerButton,onClick:function(){return a(!0)}},"Add A Question + "):null),r.createElement("div",{className:l.qaSection},d.map((function(n,e){return r.createElement(w,{key:e,productId:o,getQuestions:S,question:n})}))),r.createElement("div",{className:l.buttons},b?null:r.createElement("button",{"data-testid":"show-more-questions-button",className:l.footerButton,onClick:function(){g(!h)}},v),s.length>0?r.createElement("button",{"data-testid":"add-a-question-button",className:l.footerButton,onClick:function(){return a(!0)}},"Add A Question + "):null,r.createElement(_,{productId:o,getQuestions:S,onClose:function(){return a(!1)},open:t})))}},828:(n,e,t)=>{"use strict";t.d(e,{Z:()=>l});var r=t(4015),a=t.n(r),o=t(3645),i=t.n(o)()(a());i.push([n.id,"._38_VXG10Mju-Od14Dfg1Uc {\n  border-top: solid lightgray 1px;\n  border-bottom: solid lightgray 1px;\n  margin-left: 5%;\n  margin-right: 15px;\n  margin-top: 5%;\n  padding-top: 3%;\n  padding-bottom: 3%;\n  margin-bottom: 5%;\n}\n\n/* HEADING & SEARCH */\n\n._3LIY7_NuZYcIp9Xbb_BRsM {\n  font-family: 'Rajdhani', sans-serif;\n  /* margin: 0; */\n  /* margin-top: 20%; */\n}\n\n.mTDbzQ1ieQyzxUe2rLuff {\n  \n  /* background: linear-gradient(to right, #f8beb9, white); */\n  background-color: #f8beb97e;\n  margin-left: -10%;\n  padding-left: 10%;\n  max-width: 25%;\n  margin-bottom: 3%;\n}\n\n._3diC_gQhmC7CupFxjjH9bo {\n  padding-left: 1%;\n  height: 20px;\n  width: 20px;\n}\n\n._1Zpyw62IeKm64d5y_QjYMo {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  border: solid grey thin;\n  width: 50%;\n  min-width: 400px;\n  border-radius: 15px;\n}\n\n._2dfGgO7xN8GlsVNwW_Gg2L {\n  width: 95%;\n  line-height: 20%;\n  padding: 10px 10px;\n  outline: none;\n  border: none;\n  background: transparent;\n}\n\n/* Q & A */\n.pi74rzl0pHezFlhtGHEYz {\n  max-height: 1000px;\n  overflow-y: scroll;\n  margin-top: 2em;\n}\n\n/* Q & A GRID */\n._3Zo71BOFeKuSg27d5zv47b {\n  display: grid;\n  grid-template-columns: 1fr 10fr 10fr;\n  align-items: center;\n}\n\n._1ttiL85nChofn-9c8emOUD {\n  grid-column: 1 / 2;\n  align-self: center;\n}\n\n._28z0qtxGQI491mVaW4P_a0 {\n  grid-column: 2 / 3;\n}\n\n._3eSfcx7XnuNRDc9KPmYMHs {\n  grid-column: 2 / 3;\n  font-weight: bold;\n}\n\n._3CvAJWdJaq47IDuWkQDgMt {\n  grid-column: 3 / 4;\n  /* align-self: center; */\n  /* justify-content: center; */\n  padding-left: 20%;\n  display: inline;\n  /* align-content: flex-start; */\n  width: 100%\n}\n\n._39q7pvnW2cTHIkHef6gBDP {\n  border-left: 1px solid gray;\n  border-top: none;\n  border-bottom: none;\n  border-right: none;\n  color: blue;\n  background: transparent;\n}\n\n._39q7pvnW2cTHIkHef6gBDP:hover {\n  color: #F2B694;\n}\n\n._39ZJwfaOm_f9K1LwvqaDqG {\n  border-bottom: solid .5px rgb(190, 190, 190);\n  /* margin-right: 15px; */\n}\n\n._39ZJwfaOm_f9K1LwvqaDqG:last-child {\n  border-bottom: none;\n  /* margin-right: 15px; */\n}\n\n/* ANSWER GRID */\n\n._2f1WYZiy7XBYqGI4V3c8BO {\n  display: grid;\n  grid-template-columns: 1fr 20fr;\n  margin-bottom: 1em;\n}\n\n._3kRZI3cwXl_H6yzuX_aIRn {\n  grid-column: 1 / 2;\n  margin-block-start: 0.2em;\n}\n\n._3erLk0KqMJMAmK8ISlqUJn {\n  grid-column: 2 / 3;\n  margin-top: 1%;\n  margin-bottom: 2%;\n  padding: 1em 0 1em 1em;\n}\n\n._3erLk0KqMJMAmK8ISlqUJn:nth-child(odd) {\n  background-color: #d7ebeb4b;\n}\n\n\n/* .answerBody {\n\n} */\n\n.KgoBQ60EJOST9AN7ur8yR {\n  font-size: .8em;\n  color: rgb(128, 127, 127);\n  display: flex;\n}\n\n/* .answerPhotos {\n\n} */\n\n.IUKkF_-FbziKgjLOlneFb {\n  margin: .75em;\n  border-radius: 50%;\n}\n\n._1bnh9ud2wVgexCT02tEAl2 {\n  font-size: 8px;\n  display: flex;\n}\n\n._1_j9lj7RuKz_M8Afe4LhY6 {\n  grid-column: 2 / 3;\n  text-align: left;\n  border: none;\n  background: transparent;\n  outline: none;\n}\n\n._1_j9lj7RuKz_M8Afe4LhY6:hover {\n  color: #F2B694;\n}\n/* MODALS */\n\n._1JG-BSVScA5lB3PbkEqfE- {\n  width: 75%;\n}\n\n/* FOOTER & BUTTONS */\n._2Q68Jc9eaLVFhm7DIF0xWa {\n  margin-top: 1em;\n  grid-row-start: 3;\n  margin-bottom: 2%;\n}\n\n._1nmwfPhVR7v5nnEnApvivb:hover {\n  color: #F2B694;\n}\n\n._1nmwfPhVR7v5nnEnApvivb {\n  border: none;\n  background: transparent;\n}\n","",{version:3,sources:["webpack://./client/src/styleComponents/QA.modules.css"],names:[],mappings:"AAAA;EACE,+BAA+B;EAC/B,kCAAkC;EAClC,eAAe;EACf,kBAAkB;EAClB,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA,qBAAqB;;AAErB;EACE,mCAAmC;EACnC,eAAe;EACf,qBAAqB;AACvB;;AAEA;;EAEE,2DAA2D;EAC3D,2BAA2B;EAC3B,iBAAiB;EACjB,iBAAiB;EACjB,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,uBAAuB;EACvB,UAAU;EACV,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,uBAAuB;AACzB;;AAEA,UAAU;AACV;EACE,kBAAkB;EAClB,kBAAkB;EAClB,eAAe;AACjB;;AAEA,eAAe;AACf;EACE,aAAa;EACb,oCAAoC;EACpC,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,wBAAwB;EACxB,6BAA6B;EAC7B,iBAAiB;EACjB,eAAe;EACf,+BAA+B;EAC/B;AACF;;AAEA;EACE,2BAA2B;EAC3B,gBAAgB;EAChB,mBAAmB;EACnB,kBAAkB;EAClB,WAAW;EACX,uBAAuB;AACzB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,4CAA4C;EAC5C,wBAAwB;AAC1B;;AAEA;EACE,mBAAmB;EACnB,wBAAwB;AAC1B;;AAEA,gBAAgB;;AAEhB;EACE,aAAa;EACb,+BAA+B;EAC/B,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;AAC7B;;;AAGA;;GAEG;;AAEH;EACE,eAAe;EACf,yBAAyB;EACzB,aAAa;AACf;;AAEA;;GAEG;;AAEH;EACE,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,YAAY;EACZ,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;AACA,WAAW;;AAEX;EACE,UAAU;AACZ;;AAEA,qBAAqB;AACrB;EACE,eAAe;EACf,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,uBAAuB;AACzB",sourcesContent:[".border {\n  border-top: solid lightgray 1px;\n  border-bottom: solid lightgray 1px;\n  margin-left: 5%;\n  margin-right: 15px;\n  margin-top: 5%;\n  padding-top: 3%;\n  padding-bottom: 3%;\n  margin-bottom: 5%;\n}\n\n/* HEADING & SEARCH */\n\n.qaheader {\n  font-family: 'Rajdhani', sans-serif;\n  /* margin: 0; */\n  /* margin-top: 20%; */\n}\n\n.headerBox {\n  \n  /* background: linear-gradient(to right, #f8beb9, white); */\n  background-color: #f8beb97e;\n  margin-left: -10%;\n  padding-left: 10%;\n  max-width: 25%;\n  margin-bottom: 3%;\n}\n\n.magnifyingGlass {\n  padding-left: 1%;\n  height: 20px;\n  width: 20px;\n}\n\n.searchBarSection {\n  display: flex;\n  align-items: center;\n  background-color: white;\n  border: solid grey thin;\n  width: 50%;\n  min-width: 400px;\n  border-radius: 15px;\n}\n\n.searchBar {\n  width: 95%;\n  line-height: 20%;\n  padding: 10px 10px;\n  outline: none;\n  border: none;\n  background: transparent;\n}\n\n/* Q & A */\n.qaSection {\n  max-height: 1000px;\n  overflow-y: scroll;\n  margin-top: 2em;\n}\n\n/* Q & A GRID */\n.questionGrid {\n  display: grid;\n  grid-template-columns: 1fr 10fr 10fr;\n  align-items: center;\n}\n\n.q {\n  grid-column: 1 / 2;\n  align-self: center;\n}\n\n.question {\n  grid-column: 2 / 3;\n}\n\n.questionBody {\n  grid-column: 2 / 3;\n  font-weight: bold;\n}\n\n.questionHelpful {\n  grid-column: 3 / 4;\n  /* align-self: center; */\n  /* justify-content: center; */\n  padding-left: 20%;\n  display: inline;\n  /* align-content: flex-start; */\n  width: 100%\n}\n\n.addAnswerButton {\n  border-left: 1px solid gray;\n  border-top: none;\n  border-bottom: none;\n  border-right: none;\n  color: blue;\n  background: transparent;\n}\n\n.addAnswerButton:hover {\n  color: #F2B694;\n}\n\n.questionAndAnswer {\n  border-bottom: solid .5px rgb(190, 190, 190);\n  /* margin-right: 15px; */\n}\n\n.questionAndAnswer:last-child {\n  border-bottom: none;\n  /* margin-right: 15px; */\n}\n\n/* ANSWER GRID */\n\n.answerGrid {\n  display: grid;\n  grid-template-columns: 1fr 20fr;\n  margin-bottom: 1em;\n}\n\n.a {\n  grid-column: 1 / 2;\n  margin-block-start: 0.2em;\n}\n\n.answer {\n  grid-column: 2 / 3;\n  margin-top: 1%;\n  margin-bottom: 2%;\n  padding: 1em 0 1em 1em;\n}\n\n.answer:nth-child(odd) {\n  background-color: #d7ebeb4b;\n}\n\n\n/* .answerBody {\n\n} */\n\n.userAndDate {\n  font-size: .8em;\n  color: rgb(128, 127, 127);\n  display: flex;\n}\n\n/* .answerPhotos {\n\n} */\n\n.photo {\n  margin: .75em;\n  border-radius: 50%;\n}\n\n.answerHelpful {\n  font-size: 8px;\n  display: flex;\n}\n\n.showMoreAnswersButton {\n  grid-column: 2 / 3;\n  text-align: left;\n  border: none;\n  background: transparent;\n  outline: none;\n}\n\n.showMoreAnswersButton:hover {\n  color: #F2B694;\n}\n/* MODALS */\n\n.modalInput {\n  width: 75%;\n}\n\n/* FOOTER & BUTTONS */\n.buttons {\n  margin-top: 1em;\n  grid-row-start: 3;\n  margin-bottom: 2%;\n}\n\n.footerButton:hover {\n  color: #F2B694;\n}\n\n.footerButton {\n  border: none;\n  background: transparent;\n}\n"],sourceRoot:""}]),i.locals={border:"_38_VXG10Mju-Od14Dfg1Uc",qaheader:"_3LIY7_NuZYcIp9Xbb_BRsM",headerBox:"mTDbzQ1ieQyzxUe2rLuff",magnifyingGlass:"_3diC_gQhmC7CupFxjjH9bo",searchBarSection:"_1Zpyw62IeKm64d5y_QjYMo",searchBar:"_2dfGgO7xN8GlsVNwW_Gg2L",qaSection:"pi74rzl0pHezFlhtGHEYz",questionGrid:"_3Zo71BOFeKuSg27d5zv47b",q:"_1ttiL85nChofn-9c8emOUD",question:"_28z0qtxGQI491mVaW4P_a0",questionBody:"_3eSfcx7XnuNRDc9KPmYMHs",questionHelpful:"_3CvAJWdJaq47IDuWkQDgMt",addAnswerButton:"_39q7pvnW2cTHIkHef6gBDP",questionAndAnswer:"_39ZJwfaOm_f9K1LwvqaDqG",answerGrid:"_2f1WYZiy7XBYqGI4V3c8BO",a:"_3kRZI3cwXl_H6yzuX_aIRn",answer:"_3erLk0KqMJMAmK8ISlqUJn",userAndDate:"KgoBQ60EJOST9AN7ur8yR",photo:"IUKkF_-FbziKgjLOlneFb",answerHelpful:"_1bnh9ud2wVgexCT02tEAl2",showMoreAnswersButton:"_1_j9lj7RuKz_M8Afe4LhY6",modalInput:"_1JG-BSVScA5lB3PbkEqfE-",buttons:"_2Q68Jc9eaLVFhm7DIF0xWa",footerButton:"_1nmwfPhVR7v5nnEnApvivb"};const l=i}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,